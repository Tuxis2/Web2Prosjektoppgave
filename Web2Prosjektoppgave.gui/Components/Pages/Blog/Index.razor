@page "/Blog"
@rendermode InteractiveServer
@using System.Text.Json
@using Web2Prosjektoppgave.shared.ViewModels.Blog

@inject Services.HttpHelper HttpHelper
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager

<PageTitle>Blog hub</PageTitle>
<h3>Blog hub</h3>

<div class="container mt-4 text-center">

    <div class="row">
        <div class="col-md-10">
            <div class="row">
                <strong class="mb-4">All blogs</strong>
                @foreach (var blog in blogs)
                {
                    <div class="col-md-6 mb-2">
                        <div class="card">
                            <div class="card-body">
                                <h2 class="card-title">@blog.Title</h2>
                                <p class="card-text">@blog.Description</p>
                                <p class="card-text">Created by: @blog.CreatedByUserName</p>
                                <p class="card-text">Created on: @blog.CreatedAt</p>
                                <button class="btn btn-primary" @onclick="@(() => GoToBlog(blog.Id))">Go to Blog</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-2">
            <p>
                <Strong>Create your own blog</Strong>
            </p>
            <p>
                <button class="btn btn-primary" @onclick="GoToCreateBlog">Get your blog on</button>
            </p>
        </div>
    </div>
</div>

@code {
    private IEnumerable<BlogItemView>? blogs = Array.Empty<BlogItemView>();
    private bool getError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    private void GoToBlog(int blogId)
    {
        NavigationManager.NavigateTo($"/Blog/{blogId}");
    }

    private void GoToCreateBlog()
    {
        NavigationManager.NavigateTo($"/Blog/Create");
    }

    protected override async Task OnInitializedAsync()
    {
        blogs = await GetBlogs();

        shouldRender = true;
    }

    private async Task<IEnumerable<BlogItemView>> GetBlogs()
    {
        var response = await HttpHelper.GetAsync<IEnumerable<BlogItemView>>("https://localhost:7078/Blog");

        getError = !response.IsSuccess;

        return response.Result;
    }
}
